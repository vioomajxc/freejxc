<?php
namespace app\admin\controller;

use think\Controller;
use think\Db;
use org\Auth;
use think\Loader;
use think\facade\Config;
use think\facade\Cache;

class Base extends  Controller
{

    public $not_check;

    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        //检测是否安装
        $module     = $this->request->module();
        if (!lotus_is_installed() && $module != 'install') {
            header('Location: ' . lotus_get_root() . 'index.php/?s=install');
            exit;
        }
        //加载系统配置
        $site_config = Db::name('system')
            ->where('name','site_config')
            ->value('value');
        $this->assign('site_config',unserialize($site_config));
        //加载主题配置
        $mapKey = !empty(cache('theme'))?cache('theme'):'black';
        $theme = Config::get('theme.themeMap')[$mapKey];
        $this->assign('theme',$theme);
        //排除权限
        $this->not_check = Config::get('auth.authMap');
        $username = session('username');
        if(empty($username)){
            $this->redirect('admin/Login/login');
        }
        $this->checkAuth();
        $this->getMenu();
        // 输出当前请求控制器（配合后台侧边菜单选中状态）
        $this->assign('controller', Loader::parseName($this->request->controller()));
        $this->assign('action', Loader::parseName($this->request->action()));
    }

    /**
     * 权限检查
     * @return bool
     */
    protected function checkAuth()
    {
        $module     = $this->request->module();
        $controller = strtolower($this->request->controller());
        $action     =  strtolower($this->request->action());

        // 排除权限
        $not_check = $this->not_check;
        foreach ($not_check as &$value){
            $value = strtolower($value);
        }
        $group_id  = Db::name('auth_group_access')->where('uid',session('userid'))->value('group_id');
        if (!in_array($module . '/' . $controller . '/' . $action, $not_check)) {
            $auth     = new Auth();
            $admin_id = session('userid');
            if (!$auth->check($module . '/' . $controller. '/' . $action, $admin_id) && $admin_id !==1&&$group_id!==1) {
                $this->error('没有操作权限'.$module . '/' . $controller. '/' . $action.'-'.$admin_id.'-'.$group_id,'');
            }
        }


    }

    /**
     * 获取侧边栏菜单
     */
    protected function getMenu()
    {
        $menu           = [];
        $admin_id       = session('userid');
        $auth           = new Auth();
        $auth_rule_list = Db::name('auth_rule')->where('status', 1)->order(['sort' => 'DESC', 'id' => 'ASC'])->select();
        foreach ($auth_rule_list as $value) {
            if ($auth->check($value['name'], $admin_id) || $admin_id == 1) {
                $menu[] = $value;
            }
        }
        $menu = !empty($menu) ? array2tree($menu) : [];
        $this->assign('menu', $menu);
    }

    public function  genTableJson($paginationObj,$code=0,$msg=''){
        $total = $paginationObj->total();
        $items = $paginationObj->items();
        $res = [
            'code'=>$code,
            'msg'=>$msg,
            'count'=>$total,
            'data'=>$items
        ];
        echo json_encode($res);exit;
    }

    /**
     * @param string $msg
     * @param array $data
     * @param int $code 1普通刷新父系table 2刷新整个页面
     */
    public function successJson($msg = '提交成功',$code=1,$url='',array $data=[]){
        $res = [
            'code'=>$code,
            'msg'=>$msg,
            'url'=>$url,
            'data'=>$data
        ];
        echo json_encode($res);exit;
    }

}