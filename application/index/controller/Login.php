<?php
// +----------------------------------------------------------------------
// | LotusAdmin
// +----------------------------------------------------------------------
// | Copyright (c) 2006-2016 http://www.lotusadmin.top/ All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: wenhainan <qq 610176732>
// +----------------------------------------------------------------------
namespace  app\index\controller;

use think\Db;
use think\Controller;
use think\Verify;
use think\Session;
use think\Validate;
use app\admin\model\UserLog;
use app\admin\model\User as UserModel;


class Login extends  Controller
{

    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $module     = $this->request->module();
        if (!lotus_is_installed() && $module != 'install') {
            header('Location: ' . lotus_get_root() . 'index.php/?s=install');
            exit;
        }
    }
    //验证码
    public function getcode() {
        $length=4;
        if (isset($_GET['length']) && intval($_GET['length'])){
            $length = intval($_GET['length']);
        }

        //设置验证码字符库
        $code_set="";
        if(isset($_GET['charset'])){
            $code_set= trim($_GET['charset']);
        }

        $use_noise=1;
        if(isset($_GET['use_noise'])){
            $use_noise= intval($_GET['use_noise']);
        }

        $use_curve=1;
        if(isset($_GET['use_curve'])){
            $use_curve= intval($_GET['use_curve']);
        }

        $font_size=25;
        if (isset($_GET['font_size']) && intval($_GET['font_size'])){
            $font_size = intval($_GET['font_size']);
        }

        $width=0;
        if (isset($_GET['width']) && intval($_GET['width'])){
            $width = intval($_GET['width']);
        }

        $height=0;

        if (isset($_GET['height']) && intval($_GET['height'])){
            $height = intval($_GET['height']);
        }

        /* $background="";
        if (isset($_GET['background']) && trim(urldecode($_GET['background'])) && preg_match('/(^#[a-z0-9]{6}$)/im', trim(urldecode($_GET['background'])))){
            $background=trim(urldecode($_GET['background']));
        } */
        //TODO ADD Backgroud param!

        $config = array(
            'codeSet'   =>  !empty($code_set)?$code_set:"2345678abcdefhijkmnpqrstuvwxyzABCDEFGHJKLMNPQRTUVWXY",             // 验证码字符集合
            'expire'    =>  1800,            // 验证码过期时间（s）
            'useImgBg'  =>  false,           // 使用背景图片
            'fontSize'  =>  !empty($font_size)?$font_size:25,              // 验证码字体大小(px)
            'useCurve'  =>  $use_curve===0?false:true,           // 是否画混淆曲线
            'useNoise'  =>  $use_noise===0?false:true,            // 是否添加杂点
            'imageH'    =>  $height,               // 验证码图片高度
            'imageW'    =>  $width,               // 验证码图片宽度
            'length'    =>  !empty($length)?$length:4,               // 验证码位数
            'bg'        =>  array(243, 251, 254),  // 背景颜色
            'reset'     =>  true,           // 验证成功后是否重置
        );
        //ob_clean();
        $Verify = new \think\Verify($config);
        $Verify->entry();
    }


    //登陆
    function login(){
        $request = $this->request;
        if($request->isPost()){
            $post = $request->post();
            $db = Db::name('user')
                ->where('username',$post['posusername'])
                ->find();
            if(empty($db['password'])){
                $this->error('别逗我,用户名不存在！');
            }
            if(empty($db['shop'])){
                $this->error('非店铺用户，不允许登陆收银前台！');
            }
            if(md5($post['password'])!==$db['password']){
                $this->error('密码不正确');
            }else{
                Db::name('user')->where('id',$db['id'])->update(['last_login_time'=>date('Y-m-d H:i:s',time())]);
                if(array_key_exists('remember',$post)&&$post['remember']=='on'){
                    cookie('posusername',$post['posusername'],3600*24*7);
                    cookie('password',$post['password'],3600*24*7);
                    cookie('shop',$post['shop'],3600*24*7);
                }else{
                    $this->clearCookie();
                }
                //session('uid',$db['id']);
                session('posuserid',$db['id']);
                session('posusername',$db['username']);
                session('shop',$db['shop']);
                UserLog::addLog([
                    'uid'=>session('posuserid'),
                    'name'=>'登陆POS系统',
                    'url' => $this->request->path(),
                    'ip' =>$this->request->ip(),
                ]);
                //钩子
                $this->success('成功登陆','index/index/index');
            }
        }else{
            //加载系统配置
            $site_config = Db::name('system')
                ->where('name','site_config')
                ->value('value');
            $this->assign('site_config',unserialize($site_config));
            return $this->fetch();
        }

    }
    //清除cookie
    function clearCookie(){
        cookie('username',null);
        cookie('password',null);
        cookie(null, 'think_');
    }
    //注销
    function logout(){
        UserLog::addLog([
            'uid'=>session('posuserid'),
            'name'=>'注销系统',
            'url' => $this->request->path(),
            'ip' =>$this->request->ip(),
        ]);
        session('posuserid',null);
        //session('uid',null);
        session('posusername',null);
        session('shop',null);
        $this->success('注销中,前往登录页...','index/login/login');
    }

//修改密码
    public function  editPasswd()
    {
        $request = $this->request;
        if($request->isPost()){
            $post = $request->post();
            if($post['password']!=$post['check_password'])
                $this->error('两次输入的密码不一致');
            $post['password'] = md5($post['password']);
            UserModel::update($post);
            UserLog::addLog([
                'uid'=>session('posuserid'),
                'name'=>'修改密码',
                'url' => $this->request->path(),
                'ip' =>$this->request->ip(),
            ]);
            $this->success('修改成功,请重新登录...','/index/login/logout',2);
        }
        $sid  = session('posuserid');
        $data = UserModel::get($sid);
        return $this->fetch('editPasswd',[
            'data'=>$data
        ]);
    }
}